{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/InputForm.js","components/FuncButton.js","components/TaskCard.js","components/CreateNewComponent.js","components/TasksList.js","components/Board.js","actions/boardActions.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","InputForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","Container","StyledCard","StyledTextArea","autoFocus","onFocus","e","target","select","value","onBlur","ButtonContainer","StyledIcon","onMouseDown","styled","div","_templateObject","Card","_templateObject2","Textarea","_templateObject3","_templateObject4","Icon","_templateObject5","FuncButton","onClick","StyledButton","variant","Button","FuncButton_templateObject","TaskCard","index","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_InputForm","components_FuncButton","react_beautiful_dnd_esm","String","provided","CardContainer","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","EditButton","fontSize","DeleteButton","CardContent_default","Typography_default","connect","TaskCard_templateObject","TaskCard_templateObject2","TaskCard_templateObject3","CreateNewComponent","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","this","CreateNewComponent_OpenForm","PureComponent","OpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","CreateNewComponent_templateObject","Icon_default","style","flexShrink","listTitle","setListTitle","handleFocus","handleFinishEditing","editTitle","handleDeleteList","deleteList","ListContainer","droppableId","onSubmit","StyledInput","TitleContainer","ListTitle","TasksList_DeleteButton","droppableProps","map","components_TaskCard","components_CreateNewComponent","TasksList_templateObject","input","TasksList_templateObject2","TasksList_templateObject3","TasksList_templateObject4","h4","TasksList_templateObject5","Board","onDragEnd","result","destination","source","match","params","listOrder","StyledLink","to","direction","ListsContainer","listCards","components_TasksList","Board_templateObject","Link","Board_templateObject2","BoardThumbnail","Thumbnail","Title","_ref2","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","HomeContainer","Thumbnails","react_router_dom","textDecoration","Home_BoardThumbnail","textAlign","CreateTitle","CreateInput","Home_templateObject","Home_templateObject2","Home_templateObject3","Home_templateObject4","h3","Home_templateObject5","_templateObject6","AppRouter","react_router","path","exact","component","Home","App","HeaderDiv","routes","App_templateObject","Boolean","window","location","hostname","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.defc3f51.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\nexport * from \"./boardActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\",\r\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\r\n  ADD_BOARD: \"ADD_BOARD\"\r\n};\r\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"Мій список\",\n    board: \"board-0\"\n  }\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Моя замітка\",\n    id: `card-0`,\n    list: \"list-0\"\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\r\n\r\nconst initialState = {\r\n  \"board-0\": {\r\n    id: \"board-0\",\r\n    lists: [\"list-0\"],\r\n    title: \"Моя дошка\"\r\n  }\r\n};\r\n\r\nconst boardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const { boardID, id } = action.payload;\r\n      const board = state[boardID];\r\n      const newListID = `list-${id}`;\r\n      const newLists = [...board.lists, newListID];\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const { boardID } = action.payload;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const {\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = action.payload;\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\r\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n        board.lists = lists;\r\n\r\n        return { ...state, [boardID]: board };\r\n      }\r\n      return state;\r\n    }\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID, boardID } = action.payload;\r\n      const board = state[boardID];\r\n      const lists = board.lists;\r\n      const newLists = lists.filter(id => id !== listID);\r\n      board.lists = newLists;\r\n      return { ...state, [boardID]: board };\r\n    }\r\n\r\n    case CONSTANTS.ADD_BOARD: {\r\n      const { title, id } = action.payload;\r\n      const newID = `board-${id}`;\r\n      const newBoard = {\r\n        id: newID,\r\n        title,\r\n        lists: []\r\n      };\r\n\r\n      return { ...state, [newID]: newBoard };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsReducer;\r\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst InputForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n      console.log(list);\r\n    const placeholder = list\r\n      ? \"Введіть заголовок списку...\"\r\n      : \"Введіть текст картки...\";\r\n\r\n    const handleFocus = e => {\r\n      e.target.select();\r\n    };\r\n    \r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            onFocus={handleFocus}\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InputForm;\r\n\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst FuncButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default FuncButton;\r\n\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport InputForm from \"./InputForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport FuncButton from \"./FuncButton\";\r\n\r\nconst TaskCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editCard(id, listID, cardText));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDeleteCard = e => {\r\n    console.log(listID);\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <InputForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <FuncButton onClick={saveCard}>Зберегти</FuncButton>\r\n      </InputForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                delete\r\n              </DeleteButton>\r\n\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(TaskCard);\r\n\r\n\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport FuncButton from \"./FuncButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport InputForm from \"./InputForm\";\r\n\r\nclass CreateNewComponent extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    const { list } = this.props;\r\n    return this.state.formOpen ? (\r\n      <InputForm\r\n        list={list}\r\n        text={text}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <FuncButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n          {list ? \"Додати список\" : \"Додати картку\"}\r\n        </FuncButton>\r\n      </InputForm>\r\n    ) : (\r\n      <OpenForm list={list} onClick={this.openForm}>\r\n        {list ? \"Додати новий список\" : \"Додати нову картку\"}\r\n      </OpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst OpenForm = ({ list, children, onClick }) => {\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n  const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n      <OpenFormButton onClick={onClick}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{children}</p>\r\n      </OpenFormButton>\r\n  );\r\n};\r\n\r\n\r\nexport default connect()(CreateNewComponent);\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport TaskCard from \"./TaskCard\";\r\nimport CreateNewComponent from \"./CreateNewComponent\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst TasksList = ({ title, cards, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInput\r\n          type=\"text\"\r\n          value={listTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={handleFinishEditing}\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    dispatch(editTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div>\r\n                <div>\r\n                  {isEditing ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer onClick={() => setIsEditing(true)}>\r\n                      <ListTitle>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <TaskCard\r\n                      key={card.id}\r\n                      text={card.text}\r\n                      id={card.id}\r\n                      index={index}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <CreateNewComponent listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect()(TasksList);\r\n\r\n\r\n\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n  box-shadow: 0 2px 4px rgb(140,140,140,0.5);\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n","import React, { PureComponent } from \"react\";\r\nimport TasksList from \"./TasksList\";\r\nimport { connect } from \"react-redux\";\r\nimport CreateNewComponent from \"./CreateNewComponent\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort, setActiveBoard } from \"../actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass Board extends PureComponent {\r\n  componentDidMount() {\r\n    // set active trello board here\r\n    const { boardID } = this.props.match.params;\r\n\r\n    this.props.dispatch(setActiveBoard(boardID));\r\n  }\r\n\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists, cards, match, boards } = this.props;\r\n    const { boardID } = match.params;\r\n    const board = boards[boardID];\r\n    if (!board) {\r\n      return <p>Board not found</p>;\r\n    }\r\n    const listOrder = board.lists;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <StyledLink to=\"/\">Назад</StyledLink>\r\n        <h2>Дошка: {board.title}</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ListsContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {/* eslint-disable-next-line array-callback-return */}\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map(cardID => cards[cardID]);\r\n\r\n                  return (\r\n                    <TasksList\r\n                      listID={list.id}\r\n                      key={list.id}\r\n                      title={list.title}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <CreateNewComponent list />\r\n            </ListsContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  cards: state.cards,\r\n  boards: state.boards\r\n});\r\n\r\nexport default connect(mapStateToProps)(Board);\r\n\r\n\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  && {\r\n    text-decoration: none;\r\n    color: black;\r\n    background: white;\r\n    height: 30px;\r\n    width: 60px;\r\n    padding: 10px;\r\n    margin: -52px 8px 8px 8px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n","import { CONSTANTS } from \"../actions\";\r\nimport uuid from \"uuidv4\";\r\n\r\nexport const setActiveBoard = id => {\r\n  return {\r\n    type: CONSTANTS.SET_ACTIVE_BOARD,\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const addBoard = title => {\r\n  const id = uuid();\r\n  return {\r\n    type: CONSTANTS.ADD_BOARD,\r\n    payload: { title, id }\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"../actions\";\r\n\r\nconst BoardThumbnail = ({ title }) => {\r\n  console.log(title);\r\n  return (\r\n      <Thumbnail>\r\n        <Title>{title}</Title>\r\n      </Thumbnail>\r\n  );\r\n};\r\nconst Home = ({ boards, boardOrder, dispatch }) => {\r\n  // this is the home site that shows you your boards and you can also create a Board here.\r\n\r\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\r\n\r\n  const handleChange = e => {\r\n    setNewBoardTitle(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addBoard(newBoardTitle));\r\n  };\r\n\r\n  const renderBoards = () => {\r\n    return boardOrder.map(boardID => {\r\n      const board = boards[boardID];\r\n\r\n      return (\r\n        <Link\r\n          key={boardID}\r\n          to={`/${board.id}`}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <BoardThumbnail {...board} />\r\n        </Link>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderCreateBoard = () => {\r\n    return (\r\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\r\n        <CreateTitle>Створіть нову дошку!</CreateTitle>\r\n        <CreateInput\r\n          onChange={handleChange}\r\n          value={newBoardTitle}\r\n          placeholder=\"Введіть заголовок нової дошки...\"\r\n          type=\"text\"\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <Thumbnails>{renderBoards()}</Thumbnails>\r\n      {renderCreateBoard()}\r\n    </HomeContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  boardOrder: state.boardOrder\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n\r\n\r\n\r\n\r\nconst Thumbnail = styled.div`\r\n  height: 180px;\r\n  width: 280px;\r\n  background: #ffffff;\r\n  padding: 10px;\r\n  margin: 8px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 4px grey;\r\n`;\r\n\r\nconst Title = styled.h4`\r\n  color: #000000;\r\n`;\r\n\r\nconst Thumbnails = styled.div`\r\n  flex: 1;\r\n  height: 50%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst CreateTitle = styled.h3`\r\n  font-size: 48px;\r\n  color: white;\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst CreateInput = styled.input`\r\n  width: 400px;\r\n  height: 80px;\r\n  font-size: 22px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  border: none;\r\n  outline-color: blue;\r\n  box-shadow: 0 2px 4px grey;\r\n  align-self: center;\r\n`;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Board from \"../components/Board\";\r\nimport Home from \"../components/Home\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/:boardID\" component={Board} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\nimport styled from \"styled-components\";\n\n\nclass App extends PureComponent {\n\n  render() {\n    return (\n        <div>\n          <HeaderDiv>Vtask - курсовий проект Веждела Василя</HeaderDiv>\n          <Routes />\n        </div>\n   );\n  }\n}\n\nexport default App;\n\n\nconst HeaderDiv = styled.div`\n  background: rgba(0, 0, 0, 0.15);\n  color: white;\n  padding: 8px 0;\n  margin: -10px -10px 10px -10px;\n  text-align: center;\n  font-size: 36px;\n  font-weight: 200;\n`;\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function(e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}